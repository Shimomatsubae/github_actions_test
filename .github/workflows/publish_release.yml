name: "Publish release"
on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get latest version
        id: get_version
        run: |
          LATEST_VERSION=${{ github.event.pull_request.title }}
          VERSION_VAR=$(echo $LATEST_VERSION | sed -e "s/[^\/]*\///" $1 | sed -e "s/\/.*$//" $1)
          VERSION_NUM=$(echo $LATEST_VERSION | sed -e "s/^.*\///" | sed -e "s/\./,/g")
          echo $VERSION_VAR
          echo $LATEST_VERSION
          echo $VERSION_NUM
          if [[$VERSION_VAR =~ ^[A-Z]+$]]
          then
            echo "{VERSION_VAR}={,$VERSION_VAR}" >> $GITHUB_OUTPUT
          else
            echo "{VERSION_VAR}={}" >> $GITHUB_OUTPUT
          fi
          echo "{LATEST_VERSION}={$LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "{VERSION_NUM}={$VERSION_NUM}" >> $GITHUB_OUTPUT

      - name: Get latest version
        id: get_subversion
        run: |
          LATEST_VERSION=${{ github.event.pull_request.title }}
          VERSION_NUM=$(echo $LATEST_VERSION | sed -e "s/^.*\/.*//")
          echo $LATEST_VERSION
          echo $VERSION_NUM
          echo "{LATEST_VERSION}={$LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "{VERSION_NUM}={$VERSION_NUM}" >> $GITHUB_OUTPUT

      - name: Update version.yaml
        id: update_version_file
        run: |
          VERSION_NUM=${{ steps.get_version.outputs.VERSION_NUM }}
          sed -e "s/VERSION: \[.*\]/VERSION: \[ $VERSION_NUM $VERSION_VAR \]/" version.yaml > tmpfile && mv tmpfile version.yaml
          git add ./version.yaml
        # git config --local user.email "github-actions"
        # git config --local user.name "github-actions@github.com"
        # git commit -m "バージョン情報更新 $VERSION_NUM"
        # git push origin ${{ github.head_ref }}

      - name: Auto commit
        id: auto_commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: バージョン情報更新
          